// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "12/17/2020 10:01:48"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module mux8Demo (
	Y,
	I0,
	I1,
	I2,
	I3,
	I4,
	I5,
	I6,
	I7,
	S);
output 	Y;
input 	I0;
input 	I1;
input 	I2;
input 	I3;
input 	I4;
input 	I5;
input 	I6;
input 	I7;
input 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[3]~input_o ;
wire \Y~output_o ;
wire \I5~input_o ;
wire \S[0]~input_o ;
wire \I6~input_o ;
wire \S[1]~input_o ;
wire \I4~input_o ;
wire \inst|inst1|22~0_combout ;
wire \I7~input_o ;
wire \inst|inst1|22~1_combout ;
wire \I2~input_o ;
wire \I1~input_o ;
wire \I0~input_o ;
wire \inst|inst1|22~2_combout ;
wire \I3~input_o ;
wire \inst|inst1|22~3_combout ;
wire \S[2]~input_o ;
wire \inst|inst1|22~4_combout ;


cycloneive_io_obuf \Y~output (
	.i(\inst|inst1|22~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \I5~input (
	.i(I5),
	.ibar(gnd),
	.o(\I5~input_o ));
// synopsys translate_off
defparam \I5~input .bus_hold = "false";
defparam \I5~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S[0]~input (
	.i(S[0]),
	.ibar(gnd),
	.o(\S[0]~input_o ));
// synopsys translate_off
defparam \S[0]~input .bus_hold = "false";
defparam \S[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \I6~input (
	.i(I6),
	.ibar(gnd),
	.o(\I6~input_o ));
// synopsys translate_off
defparam \I6~input .bus_hold = "false";
defparam \I6~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S[1]~input (
	.i(S[1]),
	.ibar(gnd),
	.o(\S[1]~input_o ));
// synopsys translate_off
defparam \S[1]~input .bus_hold = "false";
defparam \S[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \I4~input (
	.i(I4),
	.ibar(gnd),
	.o(\I4~input_o ));
// synopsys translate_off
defparam \I4~input .bus_hold = "false";
defparam \I4~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|22~0 (
// Equation(s):
// \inst|inst1|22~0_combout  = (\S[0]~input_o  & (((\S[1]~input_o )))) # (!\S[0]~input_o  & ((\S[1]~input_o  & (\I6~input_o )) # (!\S[1]~input_o  & ((\I4~input_o )))))

	.dataa(\S[0]~input_o ),
	.datab(\I6~input_o ),
	.datac(\S[1]~input_o ),
	.datad(\I4~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|22~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|22~0 .lut_mask = 16'hE5E0;
defparam \inst|inst1|22~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \I7~input (
	.i(I7),
	.ibar(gnd),
	.o(\I7~input_o ));
// synopsys translate_off
defparam \I7~input .bus_hold = "false";
defparam \I7~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|22~1 (
// Equation(s):
// \inst|inst1|22~1_combout  = (\S[0]~input_o  & ((\inst|inst1|22~0_combout  & ((\I7~input_o ))) # (!\inst|inst1|22~0_combout  & (\I5~input_o )))) # (!\S[0]~input_o  & (((\inst|inst1|22~0_combout ))))

	.dataa(\I5~input_o ),
	.datab(\S[0]~input_o ),
	.datac(\inst|inst1|22~0_combout ),
	.datad(\I7~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|22~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|22~1 .lut_mask = 16'hF838;
defparam \inst|inst1|22~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \I2~input (
	.i(I2),
	.ibar(gnd),
	.o(\I2~input_o ));
// synopsys translate_off
defparam \I2~input .bus_hold = "false";
defparam \I2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \I1~input (
	.i(I1),
	.ibar(gnd),
	.o(\I1~input_o ));
// synopsys translate_off
defparam \I1~input .bus_hold = "false";
defparam \I1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \I0~input (
	.i(I0),
	.ibar(gnd),
	.o(\I0~input_o ));
// synopsys translate_off
defparam \I0~input .bus_hold = "false";
defparam \I0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|22~2 (
// Equation(s):
// \inst|inst1|22~2_combout  = (\S[1]~input_o  & (((\S[0]~input_o )))) # (!\S[1]~input_o  & ((\S[0]~input_o  & (\I1~input_o )) # (!\S[0]~input_o  & ((\I0~input_o )))))

	.dataa(\S[1]~input_o ),
	.datab(\I1~input_o ),
	.datac(\S[0]~input_o ),
	.datad(\I0~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|22~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|22~2 .lut_mask = 16'hE5E0;
defparam \inst|inst1|22~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \I3~input (
	.i(I3),
	.ibar(gnd),
	.o(\I3~input_o ));
// synopsys translate_off
defparam \I3~input .bus_hold = "false";
defparam \I3~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|22~3 (
// Equation(s):
// \inst|inst1|22~3_combout  = (\S[1]~input_o  & ((\inst|inst1|22~2_combout  & ((\I3~input_o ))) # (!\inst|inst1|22~2_combout  & (\I2~input_o )))) # (!\S[1]~input_o  & (((\inst|inst1|22~2_combout ))))

	.dataa(\I2~input_o ),
	.datab(\S[1]~input_o ),
	.datac(\inst|inst1|22~2_combout ),
	.datad(\I3~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|22~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|22~3 .lut_mask = 16'hF838;
defparam \inst|inst1|22~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \S[2]~input (
	.i(S[2]),
	.ibar(gnd),
	.o(\S[2]~input_o ));
// synopsys translate_off
defparam \S[2]~input .bus_hold = "false";
defparam \S[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|22~4 (
// Equation(s):
// \inst|inst1|22~4_combout  = (\S[2]~input_o  & (\inst|inst1|22~1_combout )) # (!\S[2]~input_o  & ((\inst|inst1|22~3_combout )))

	.dataa(\inst|inst1|22~1_combout ),
	.datab(\inst|inst1|22~3_combout ),
	.datac(gnd),
	.datad(\S[2]~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|22~4_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|22~4 .lut_mask = 16'hAACC;
defparam \inst|inst1|22~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \S[3]~input (
	.i(S[3]),
	.ibar(gnd),
	.o(\S[3]~input_o ));
// synopsys translate_off
defparam \S[3]~input .bus_hold = "false";
defparam \S[3]~input .simulate_z_as = "z";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule
