// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "12/02/2020 16:28:45"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MuxDemo3 (
	F,
	D,
	C,
	B,
	A);
output 	F;
input 	D;
input 	C;
input 	B;
input 	A;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \F~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \D~input_o ;
wire \C~input_o ;
wire \inst|inst28|inst2~0_combout ;


cycloneive_io_obuf \F~output (
	.i(\inst|inst28|inst2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F~output_o ),
	.obar());
// synopsys translate_off
defparam \F~output .bus_hold = "false";
defparam \F~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \D~input (
	.i(D),
	.ibar(gnd),
	.o(\D~input_o ));
// synopsys translate_off
defparam \D~input .bus_hold = "false";
defparam \D~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst28|inst2~0 (
// Equation(s):
// \inst|inst28|inst2~0_combout  = (\A~input_o ) # ((\B~input_o  & ((!\C~input_o ) # (!\D~input_o ))) # (!\B~input_o  & ((\D~input_o ) # (\C~input_o ))))

	.dataa(\A~input_o ),
	.datab(\B~input_o ),
	.datac(\D~input_o ),
	.datad(\C~input_o ),
	.cin(gnd),
	.combout(\inst|inst28|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst28|inst2~0 .lut_mask = 16'hBFFE;
defparam \inst|inst28|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign F = \F~output_o ;

endmodule
